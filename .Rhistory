plot(pca_arr,type="l",main="")
title(xlab="Component number")
pca_arr = prcomp(PollutionAgents, scale = TRUE)
summary(pca_arr)
plot(pca_arr,type="l",main="")
PollutionData = as.matrix(airpollution[,1:7])
pairs(PollutionAgents)
pairs(PollutionData)
cov(PollutionData)
det(cov(PollutionData))
sum(diag(cov(PollutionData)))
StandardisedPollutionData = scale(PollutionData)
StandardisedPollutionData
colMeans(StandardisedPollutionData)
cov(StandardisedPollutionData)
cor(PollutionData)
plot(pca_arr,type="l",main="")
pca_arr = prcomp(PollutionAgents, scale = FALSE)
plot(pca_arr,type="l",main="")
pca_arr = prcomp(PollutionData, scale = FALSE)
plot(pca_arr,type="l",main="")
pca_arr = prcomp(PollutionData, scale = TRUE)
plot(pca_arr,type="l",main="")
pca_arr = prcomp(PollutionData, scale = FALSE)
plot(pca_arr,type="l",main="")
apply(PollutionData,2,var)
diag(var(airpollution))
diag(var(PollutionData))
colMeans(PollutionData)
cov(StandardisedPollutionData)
diag(var(StandardisedPollutionData))
pca_arr = prcomp(PollutionData, scale = FALSE)
plot(pca_arr,type="l",main="")
pca_arr = prcomp(PollutionData, scale = TRUE)
plot(pca_arr,type="l",main="")
summary(pca_arr)
pca_arr = prcomp(PollutionData, scale = FALSE)
summary(pca_arr)
pca_arr = prcomp(PollutionData, scale = TRUE)
summary(pca_arr)
head(pca_arr$X)
head(pca_arr$x)
pca_arr$x[,1]
pca_arr = prcomp(airpollution, scale = TRUE)
plot(pca_arr,type="l",main="")
pca_arr = prcomp(PollutionData, scale = TRUE)
plot(pca_arr,type="l",main="")
pca_arr$x[,1]
pca_arr$x[,2]
pca_arr$rotation
pca_arr = prcomp(PollutionData, scale = TRUE)
summary(pca_arr)
str(pca_arr)
pca_arr$rotation
head(airpollution)
PollutionData$
PollutionData = as.matrix(airpollution[,1:7])
PollutionData
PollutionData$PollutionData
PollutionData$PollutionData
PollutionData$
PollutionData = as.matrix(airpollution[,1:7])
PollutionData$
PollutionData = as.matrix(airpollution[,1:7])
PollutionData$x
PollutionData$region
PollutionData$n
PollutionData$[1,]
PollutionData$x[1,]
PollutionData[1,]
airpollution$[1,]
airpollution[1,]
labels(airpollution)
labels(airpollution)[1,]
labels(airpollution)[1]
USACities = labels(airpollution)[1]
USACities
plot(pca_arr$x[,1],pca_arr$x[,2], col=USACities,pch=USACities, xlab = "First PC", ylab = "Second PC")
text(pca_arr$x[,1],pca_arr$x[,2], labels = rownames(PollutionData), cex=0.7,pos=3,col="darkgrey")
plot(pca_arr$x[,1],pca_arr$x[,2], col=USACities,pch=USACities, xlab = "First PC", ylab = "Second PC")
text(pca_arr$x[,1],pca_arr$x[,2], labels = rownames(PollutionData), cex=0.7,pos=3,col="darkgrey")
pca_arr$x[,1]
pca_arr$x[,2]
pca_arr$rotation[1,]
pca_arr$rotation[,1]
pca_arr$rotation[1,]
pca_arr$rotation[,1]
plot(pca_arr$rotation[,1],pca_arr$rotation[,2], col=USACities,pch=USACities, xlab = "First PC", ylab = "Second PC")
plot(pca_arr$x[,1],pca_arr$x[,2] xlab = "First PC", ylab = "Second PC")
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC")
text(pca_arr$x[,1],pca_arr$x[,2], labels = rownames(PollutionData), cex=0.7,pos=3,col="darkgrey")
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC")
text(pca_arr$x[,1],pca_arr$x[,2], labels = rownames(USACities), cex=0.7,pos=3,col="darkgrey")
text(pca_arr$x[,1],pca_arr$x[,2], labels = USACities, cex=0.7,pos=3,col="darkgrey")
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC")
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" col(USACities))
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC", col(USACities))
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC", col = USACities, pch=USACities)
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC", col = USACities)
USACities_colors = as.numeric(USACities)
USACities_colors = as.numeric(USACities)
USACities
class(USACities)
USACities_colors = as.numeric(USACities)
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC", pch = USACities)
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC")
text(pca_arr$x[,1],pca_arr$x[,2], labels = USACities, cex=0.7,pos=3,col="darkgrey")
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC")
pca_arr$rotation[,1]
pca_arr$rotation[,2]
pca_arr$x[,1]
pca_arr$x[,2]
class(pca_arr)
class(pca_arr$x[,1])
plot(pca_arr$x[,1][1],pca_arr$x[,2][1], xlab = "First PC", ylab = "Second PC")
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC")
install.packages("ggplot2")
library(ggplot2)
g =ggplot(data=mpg,aes(x=pca_arr$x[,1], y=pca_arr$x[,2]))
g +geom_point(aes(colour=factor(USACities)))
g =ggplot(data=pca_arr,aes(x=pca_arr$x[,1], y=pca_arr$x[,2]))
g =ggplot(data=pca_arr$x[,1],aes(x=pca_arr$x[,1], y=pca_arr$x[,2]))
qplott(data=pca_arr$x[,1],aes(x=pca_arr$x[,1], y=pca_arr$x[,2]))
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC")
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , color = factor(USACities))
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC")
USACities[1]
USACities[2]
USACities[1,1]
USACities[1]
length(USACities)
USACities_colors = as.numeric(USACities[1])
class(USACities[1])
class(USACities)
length(USACities[1])
labels(airpollution)
USACities = labels(airpollution)$[1]
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = rownames(USACities[1]))
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = rownames(USACities))
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = rownames(USACities))
USACities = labels(airpollution)[1]
View(USACities)
View(USACities)
View(USACities)
View(USACities)
View(USACities)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = rownames(USACities))
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = rownames(USACities),geom=c("point", "text"),
hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = rownames(USACities),geom=c("point", "text"),hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = rownames(USACities[1]),geom=c("point", "text"),
hjust=0, vjust=0)
USACities[1]
USACities
USACities$[1]
USACities$1
USACities$
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = rownames(USACities[1]),geom=c("point", "text"),
hjust=0, vjust=0)
USACities[3]
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = rownames(USACities[1]),geom=c("point", "text"),
hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = rownames(USACities),geom=c("point", "text"),
hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = "test",geom=c("point", "text"),
hjust=0, vjust=0)
as.list(USACities)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label = as.list(USACities),geom=c("point", "text"),
hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  rownames(as.list(USACities)),geom=c("point", "text"),
hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  rownames("test"),geom=c("point", "text"),
hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  rownames(pca_arr),geom=c("point", "text"),
hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  rownames(pca_arr$x[,1]),geom=c("point", "text"),
hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  "test",geom=c("point", "text"),
hjust=0, vjust=0)
PollutionData = as.matrix(airpollution[,1:11])
pairs(PollutionData)
PollutionData = as.matrix(airpollution[,1:7])
pairs(PollutionData)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  "test",geom=c("point", "text"),
hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  x,geom=c("point", "text"),
hjust=0, vjust=0)
USACities
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  USACities,geom=c("point", "text"),
hjust=0, vjust=0)
pca_arr$rotation[,2]
pca_arr$x[,1]
lable(pca_arr$x[,1])
label(pca_arr$x[,1])
labels(pca_arr$x[,1])
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  pca_arr$x[,1],geom=c("point", "text"),
hjust=0, vjust=0)
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  labels(pca_arr$x[,1]),geom=c("point", "text"),
hjust=0, vjust=0)
labels(pca_arr$x[,2])
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" )
text(pca_arr$x[,1],pca_arr$x[,2], labels = rownames(pca_arr$x[,1]),cex=0.7,pos=3)
text(pca_arr$x[,1],pca_arr$x[,2], labels = labels(pca_arr$x[,1]),cex=0.7,pos=3)
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" col=labels(pca_arr$x[,1]))
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC", col=labels(pca_arr$x[,1]))
color = as.numeric(labels(pca_arr$x[,1]))
color
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  labels(pca_arr$x[,1]),geom=c("point", "text"),
hjust=0, vjust=0)
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC")
text(pca_arr$x[,1],pca_arr$x[,2], labels = labels(pca_arr$x[,1]),cex=0.7,pos=3)
?airpollution
qplot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC" , label =  labels(pca_arr$x[,1]),geom=c("point", "text"),
hjust=0, vjust=0)
?airpollution
plot(pca_arr$x[,1],pca_arr$x[,2], xlab = "First PC", ylab = "Second PC")
text(pca_arr$x[,1],pca_arr$x[,2], labels = labels(pca_arr$x[,1]),cex=0.7,pos=3)
install.packages(""ProjectTemplate)
install.packages('ProjectTemplate')
library('ProjectTemplate')
create.project('RWorkSpace')
setwd("~/RWorkSpace")
load.project()
setwd("~/RWorkSpace")
library('ProjectTemplate')
load.project()
load.project()
View(config)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
dim(Ch10Ex11)
data("Ch10Ex11")
dim(Ch10Ex11)
data("Ch10Ex11")
dim(Ch10Ex11)
class(Ch10Ex11)
data("Ch10Ex11")
dim(Ch10Ex11)
class(Ch10Ex11)
data("Ch10Ex11")
dim(Ch10Ex11)
gexpr = as.matrix(Ch10Ex11)
data("Ch10Ex11")
dim(Ch10Ex11)
gexpr = as.matrix(Ch10Ex11)
data("Ch10Ex11")
dim(Ch10Ex11)
gexpr = as.matrix(Ch10Ex11)
dim(gexpr)
data("Ch10Ex11")
dim(Ch10Ex11)
gexpr = as.matrix(Ch10Ex11)
gexpr = t(gexpr)
dim(gexpr)
data("Ch10Ex11")
dim(Ch10Ex11)
gexpr = as.matrix(Ch10Ex11)
gexpr = t(gexpr)
dim(gexpr)
data("Ch10Ex11")
dim(Ch10Ex11)
gexpr = as.matrix(Ch10Ex11)
gexpr = t(gexpr)
head(gexpr)
View(Ch10Ex11)
View(Ch10Ex11)
View(Ch10Ex11)
View(Ch10Ex11)
dim(Ch10Ex11)
dim(Ch10Ex11)
gexpr=read.csv("C:\Users\User\Desktop\Stats\Ch10Ex11.csv",header=FALSE)
gexpr=read.csv("C:/Users/User/Desktop/Stats/Ch10Ex11.csv",header=FALSE)
dim(gexpr)
gexpr = t(gexpr)
class(gexpr)
head(gexpr)
gexpr
dim(gexpr)
gexpr=read.csv("C:/Users/User/Desktop/Stats/Ch10Ex11.csv",header=FALSE)
gexpr
gexpr = t(gexpr)
gexpr
View(gexpr)
View(gexpr)
dim(gexpr)
r_obs = cor(gexpr)
d_cor = 1-r_obs
hc_c = hclust(d_cor, method = "single")
d_cor
class(d_cor)
as.dist(d_cor)
hc_c = hclust(d_cor, method = "single")
class(d_cor)
d_cor = as.dist(d_cor)
class(d_cor)
hc_c = hclust(d_cor, method = "single")
plot(hc_c, cex=0.5,main="",sub="",xlab="")
gexpr=read.csv("C:/Users/User/Desktop/Stats/Ch10Ex11.csv",header=FALSE)
r_obs = cor(gexpr)
d_cor = 1-r_obs
d_cor = as.dist(d_cor)
hc_c = hclust(d_cor, method = "single")
plot(hc_c, cex=0.5,main="",sub="",xlab="")
hc_c = hclust(d_cor, method = "complete")
plot(hc_c, cex=0.5,main="",sub="",xlab="")
View(Ch10Ex11)
View(gexpr)
View(gexpr)
gexpr = t(gexpr)
View(gexpr)
View(r_obs)
r_obs = cor(gexpr)
d_cor = 1-r_obs
View(r_obs)
d_cor = as.dist(d_cor)
hc_c = hclust(d_cor, method = "complete")
plot(hc_c, cex=0.5,main="",sub="",xlab="")
gexpr=read.csv("C:/Users/User/Desktop/Stats/Ch10Ex11.csv",header=TRUE)
View(gexpr)
gexpr = t(gexpr)
View(gexpr)
dist(gexpr)
gexpr_matrix = as.matrix(gexpr)
View(gexpr_matrix)
hc_c = hclust(gexpr_matrix, method = "complete")
gexpr=read.csv("C:/Users/User/Desktop/Stats/Ch10Ex11.csv",header=TRUE)
gexpr = t(gexpr)
gexpr_dist = dist(gexpr)
hc_c = hclust(gexpr_dist, method = "complete")
plot(hc_c, cex=0.5,main="",sub="",xlab="")
gexpr=read.csv("C:/Users/User/Desktop/Stats/Ch10Ex11.csv",header=TRUE)
r_obs = cor(gexpr)
d_cor = 1-r_obs
d_cor = as.dist(d_cor)
hc_c = hclust(d_cor, method = "complete")
plot(hc_c, cex=0.5,main="",sub="",xlab="")
gexpr=read.csv("C:/Users/User/Desktop/Stats/Ch10Ex11.csv",header=FALSE)
View(gexpr)
gexpr=read.csv("C:/Users/User/Desktop/Stats/Ch10Ex11.csv",header=TRUE)
View(gexpr)
gexpr = t(gexpr)
View(gexpr)
gexpr=read.csv("C:/Users/User/Desktop/Stats/Ch10Ex11.csv",header=TRUE)
View(gexpr)
gexpr = t(gexpr)
gexpr = t(gexpr)
gexpr=read.csv("C:/Users/User/Desktop/Stats/Ch10Ex11.csv",header=TRUE)
gexpr = t(gexpr)
r_obs = cor(gexpr)
d_cor = 1-r_obs
View(d_cor)
View(d_cor)
d_cor = as.dist(d_cor)
hc_c = hclust(d_cor, method = "single")
plot(hc_c, cex=0.5,main="",sub="",xlab="")
gexpr = t(gexpr)
data("Ch10Ex11")
dim(Ch10Ex11)
gexpr = as.matrix(Ch10Ex11)
gexpr = t(gexpr)
(gexpr)
data("Ch10Ex11")
dim(Ch10Ex11)
gexpr = as.matrix(Ch10Ex11)
gexpr = t(gexpr)
(gexpr)
data("Ch10Ex11")
data("Ch10Ex11")
dim(Ch10Ex11)
gexpr = as.matrix(Ch10Ex11)
gexpr = t(gexpr)
(gexpr)
data("Ch10Ex11")
dim(Ch10Ex11)
gexpr = as.matrix(Ch10Ex11)
gexpr = t(gexpr)
(gexpr)
data("Ch10Ex11")
dim(Ch10Ex11)
data(Ch10Ex11)
data(Ch10Ex11)
dim(Ch10Ex11)
data(Ch10Ex11)
dim(Ch10Ex11)
View(Ch10Ex11)
dim(Ch10Ex11)
setwd("~/RWorkSpace")
load.project(RWorkSpace)
load.project(RWorkSpace)
load.project('RWorkSpace')
setwd("~/RWorkSpace/src")
library('ProjectTemplate')
load.project()
library('ProjectTemplate')
load.project()
setwd("~/RWorkSpace")
library('ProjectTemplate')
load.project()
View(Ch10Ex11)
dim(Ch10Ex11)
dim(Ch10Ex11)
gexpr = t(Ch10Ex11)
View(gexpr)
#Check dimesion of the loaded data
dim(Ch10Ex11)
#transpose once to correct the data
gexpr = t(Ch10Ex11)
class(gexpr)
#Creating Correlation Distance Matrix
#Transpose the
#Check dimesion of the loaded data
dim(Ch10Ex11)
#transpose once to correct the data
genexpr_data = t(Ch10Ex11)
#Creating correlation distance matrix
#Transpose the gexpr matrix in order to use cor function
genexpr_data = t(genexpr_data)
#Compute the inter-observation correlations
r_obs = cor(genexpr_data)
#Create the distance matrix
d_cor = 1-r_obs
#convert the distance matrix to dis object
d_cor = as.dist(d_cor)
#Perform hierarchical clustering using hclust with metod specified as "single" to indicate single-linkage
hc_c = hclust(d_cor, method = "single")
#Plot the dendrogram
plot(hc_c, cex=0.5,main="",sub="",xlab="")
knitr::opts_knit$set(root.dir= normalizePath('..'))
data(Ch10Ex11)
#Check dimesion of the loaded data
dim(Ch10Ex11)
genexpr_data=read.csv("../data/Ch10Ex11.csv",header=TRUE)
library(readr)
Ch10Ex11 <- read_csv("data/Ch10Ex11.csv")
View(Ch10Ex11)
data("Ch10Ex11")
#Check dimesion of the loaded data
dim(genexpr_data)
data("Ch10Ex11")
#Check dimesion of the loaded data
dim(genexpr_data)
#transpose once to correct the data
genexpr_data = t(genexpr_data)
#Creating correlation distance matrix
#Transpose the gexpr matrix in order to use cor function
genexpr_data = t(genexpr_data)
#Compute the inter-observation correlations
r_obs = cor(genexpr_data)
#Create the distance matrix
d_cor = 1-r_obs
#convert the distance matrix to dis object
d_cor = as.dist(d_cor)
#Perform hierarchical clustering using hclust with metod specified as "single" to indicate single-linkage
hc_c = hclust(d_cor, method = "single")
#Plot the dendrogram
plot(hc_c, cex=0.5,main="",sub="",xlab="")
genexpr_data = data("Ch10Ex11")
genexpr_data = data("Ch10Ex11")
genexpr_data = data("Ch10Ex11")
#Check dimesion of the loaded data
dim(genexpr_data)
#Check dimesion of the loaded data
dim(Ch10Ex11)
data("Ch10Ex11")
#Check dimesion of the loaded data
dim(Ch10Ex11)
data("Ch10Ex11")
#Check dimesion of the loaded data
dim(Ch10Ex11)
data("Ch10Ex11")
#Check dimesion of the loaded data
dim(Ch10Ex11)
hc_c_complete = hclust(d_cor, method = "complete")
plot(hc_c_complete, cex=0.5,main="",sub="",xlab="")
hc_c_complete = hclust(d_cor, method = "complete")
hc_c_average = hclust(d_cor, method = "average")
plot(hc_c_complete, cex=0.5,main="",sub="",xlab="")
plot(hc_c_average, cex=0.5,main="",sub="",xlab="")
genexpr_data=read.csv("C:/Users/User/Documents/RWorkSpace/data/Ch10Ex11.csv",header=TRUE)
#Check dimesion of the loaded data
dim(genexpr_data)
#transpose once to correct the data
genexpr_data = t(genexpr_data)
#Transpose the matrix in order to use cor function
genexpr_data_transposed = t(genexpr_data)
#Compute the inter-observation correlations
r_obs = cor(genexpr_data_transposed)
#Create the distance matrix
d_cor = 1-r_obs
#convert the distance matrix to dis object
d_cor = as.dist(d_cor)
hc_c = hclust(d_cor, method = "single")
plot(hc_c, cex=0.5,main="",sub="",xlab="")
View(genexpr_data)
genexpr_data_euc = dist(genexpr_data)
dim(genexpr_data_euc)
genexpr_data_euc = dist(genexpr_data)
dim(genexpr_data_euc)
genexpr_data=read.csv("C:/Users/User/Documents/RWorkSpace/data/Ch10Ex11.csv",header=TRUE)
#Check dimesion of the loaded data
dim(genexpr_data)
#transpose once to correct the data
genexpr_data = t(genexpr_data)
genexpr_data_euc = dist(genexpr_data)
dim(genexpr_data_euc)
genexpr_data_euc = dist(genexpr_data)
genexpr_data_euc
genexpr_data_euc = dist(genexpr_data)
class(genexpr_data_euc)
genexpr_data_euc = dist(genexpr_data)
hc_c_euc_single = hclust(genexpr_data_euc, method = "single")
plot(hc_c_euc_single, cex=0.5,main="",sub="",xlab="")
